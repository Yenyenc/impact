# Generated by Django 4.1.1 on 2022-10-21 10:15

from django.db import migrations, models
import django.db.models.deletion
import django.forms.fields
import reglementations.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("entreprises", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="BDESE",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("annee", models.IntegerField(default=2022)),
                (
                    "effectif_total",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Tout salarié inscrit à l’effectif au 31/12 quelle que soit la nature de son contrat de travail",
                        null=True,
                    ),
                ),
                (
                    "effectif_permanent",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Les salariés à temps plein, inscrits à l’effectif pendant toute l’année considérée et titulaires d’un contrat de travail à durée indéterminée.",
                        null=True,
                    ),
                ),
                (
                    "effectif_cdd",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Nombre de salariés titulaires d’un contrat de travail à durée déterminée au 31/12",
                        null=True,
                        verbose_name="Effectif CDD",
                    ),
                ),
                (
                    "effectif_mensuel_moyen",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Somme des effectifs totaux mensuels divisée par 12 (on entend par effectif total tout salarié inscrit à l’effectif au dernier jour du mois considéré)",
                        null=True,
                    ),
                ),
                (
                    "effectif_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                    ),
                ),
                (
                    "effectif_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                    ),
                ),
                (
                    "effectif_age",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "moins de 30 ans",
                            "30 à 39 ans",
                            "40 à 49 ans",
                            "50 ans et plus",
                        ],
                        null=True,
                        verbose_name="Effectif par âge",
                    ),
                ),
                (
                    "effectif_anciennete",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "moins de 10 ans",
                            "entre 10 et 20 ans",
                            "plus de 30 ans",
                        ],
                        null=True,
                        verbose_name="Effectif par ancienneté",
                    ),
                ),
                (
                    "effectif_nationalite_francaise",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Effectif de nationalité française",
                    ),
                ),
                (
                    "effectif_nationalite_etrangere",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Effectif de nationalité étrangère",
                    ),
                ),
                (
                    "nombre_travailleurs_exterieurs",
                    models.IntegerField(
                        blank=True,
                        help_text="Nombre de salariés appartenant à une entreprise extérieure (prestataire de services) dont l’entreprise connaît le nombre, soit parce qu’il figure dans le contrat signé avec l’entreprise extérieure, soit parce que ces travailleurs sont inscrits aux effectifs.",
                        null=True,
                        verbose_name="Nombre de travailleurs extérieurs",
                    ),
                ),
                (
                    "nombre_stagiaires",
                    models.IntegerField(
                        blank=True,
                        help_text="Stages supérieurs à une semaine.",
                        null=True,
                        verbose_name="Nombre de stagiaires",
                    ),
                ),
                (
                    "nombre_moyen_mensuel_salaries_temporaires",
                    models.IntegerField(
                        blank=True,
                        help_text="Est considérée comme salarié temporaire toute personne mise à la disposition de l’entreprise, par une entreprise de travail temporaire.",
                        null=True,
                        verbose_name="Nombre moyen mensuel de salariés temporaires",
                    ),
                ),
                (
                    "duree_moyenne_contrat_de_travail_temporaire",
                    models.IntegerField(
                        blank=True,
                        help_text="En jours",
                        null=True,
                        verbose_name="Durée moyenne des contrats de travail temporaire",
                    ),
                ),
                (
                    "nombre_salaries_de_l_entreprise_detaches",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés de l'entreprise détachés",
                    ),
                ),
                (
                    "nombre_salaries_detaches_accueillis",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés détachés accueillis",
                    ),
                ),
                (
                    "nombre_embauches_cdi",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'embauches par contrats de travail à durée indéterminée",
                    ),
                ),
                (
                    "nombre_embauches_cdd",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="dont nombre de contrats de travailleurs saisonniers",
                        null=True,
                        verbose_name="Nombre d'embauches par contrats de travail à durée déterminée",
                    ),
                ),
                (
                    "nombre_embauches_jeunes",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'embauches de salariés de moins de vingt-cinq ans",
                    ),
                ),
                (
                    "total_departs",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Total des départs",
                    ),
                ),
                (
                    "nombre_demissions",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de démissions",
                    ),
                ),
                (
                    "nombre_licenciements_economiques",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="dont départs en retraite et préretraite",
                        null=True,
                        verbose_name="Nombre de licenciements pour motif économique",
                    ),
                ),
                (
                    "nombre_licenciements_autres",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de licenciements pour d’autres causes",
                    ),
                ),
                (
                    "nombre_fin_cdd",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de fins de contrats de travail à durée déterminée",
                    ),
                ),
                (
                    "nombre_fin_periode_essai",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="à ne remplir que si ces départs sont comptabilisés dans le total des départs",
                        null=True,
                        verbose_name="Nombre de départs au cours de la période d’essai",
                    ),
                ),
                (
                    "nombre_mutations",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de mutations d’un établissement à un autre",
                    ),
                ),
                (
                    "nombre_departs_volontaires_retraite_preretraite",
                    models.TextField(
                        blank=True,
                        help_text="Distinguer les différents systèmes légaux et conventionnels de toute nature",
                        null=True,
                        verbose_name="Nombre de départs volontaires en retraite et préretraite",
                    ),
                ),
                (
                    "nombre_deces",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de décès",
                    ),
                ),
                (
                    "nombre_promotions",
                    models.IntegerField(
                        blank=True,
                        help_text="Utiliser les catégories de la nomenclature détaillée",
                        null=True,
                        verbose_name="Nombre de salariés promus dans l’année dans une catégorie supérieure",
                    ),
                ),
                (
                    "nombre_salaries_chomage_partiel",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés mis en chômage partiel pendant l’année considérée",
                    ),
                ),
                (
                    "nombre_heures_chomage_partiel_indemnisees",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Y compris les heures indemnisées au titre du chômage total en cas d’arrêt de plus de quatre semaines consécutives",
                        null=True,
                        verbose_name="Nombre total d'heures de chômage partiel indemnisées",
                    ),
                ),
                (
                    "nombre_heures_chomage_partiel_non_indemnisees",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre total d'heures de chômage partiel non indemnisées",
                    ),
                ),
                (
                    "nombre_salaries_chomage_intemperies",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés mis en chômage intempéries",
                    ),
                ),
                (
                    "nombre_heures_chomage_intemperies_indemnisees",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre total d'heures de chômage intempéries indemnisées",
                    ),
                ),
                (
                    "nombre_heures_chomage_intemperies_non_indemnisees",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre total d'heures de chômage intempéries non indemnisées",
                    ),
                ),
                (
                    "nombre_travailleurs_handicapés",
                    models.IntegerField(
                        blank=True,
                        help_text="tel qu’il résulte de la déclaration obligatoire prévue à l’article L. 5212-5.",
                        null=True,
                        verbose_name="Nombre de travailleurs handicapés employés sur l'année considérée",
                    ),
                ),
                (
                    "nombre_travailleurs_handicapes_accidents_du_travail",
                    models.IntegerField(
                        blank=True,
                        help_text="employés sur l'année considérée",
                        null=True,
                        verbose_name="Nombre de travailleurs handicapés à la suite d'accidents du travail intervenus dans l'entreprise",
                    ),
                ),
                (
                    "pourcentage_masse_salariale_formation_continue",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Pourcentage de la masse salariale afférent à la formation continue",
                    ),
                ),
                (
                    "montant_formation_continue",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "formation interne",
                            "formation effectuée en application de conventions",
                            "versement aux organismes de recouvrement",
                            "versement auprès d'organismes agréés",
                            "autres",
                        ],
                        null=True,
                        verbose_name="Montant consacré à la formation continue",
                    ),
                ),
                (
                    "nombre_heures_stage_remunerees",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'heures de stage rémunérées",
                    ),
                ),
                (
                    "nombre_heures_stage_non_remunerees",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'heures de stage non rémunérées",
                    ),
                ),
                (
                    "type_stages",
                    models.TextField(
                        blank=True,
                        help_text="à titre d'exemple : adaptation, formation professionnelle, entretien ou perfectionnement des connaissances",
                        null=True,
                        verbose_name="Décomposition par type de stages",
                    ),
                ),
                (
                    "nombre_salaries_conge_formation_remunere",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés ayant bénéficié d'un congé formation rémunéré",
                    ),
                ),
                (
                    "nombre_salaries_conge_formation_non_remunere",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés ayant bénéficié d'un congé formation non rémunéré",
                    ),
                ),
                (
                    "nombre_salaries_conge_formation_refuse",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés auxquels a été refusé un congé formation",
                    ),
                ),
                (
                    "nombre_contrats_apprentissage",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de contrats d’apprentissage conclus dans l’année",
                    ),
                ),
                (
                    "nombre_incapacites_permanentes_partielles",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["français", "étrangers"],
                        null=True,
                        verbose_name="Nombre d'incapacités permanentes partielles notifiées à l'entreprise au cours de l'année considérée",
                    ),
                ),
                (
                    "nombre_incapacites_permanentes_totales",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["français", "étrangers"],
                        null=True,
                        verbose_name="Nombre d'incapacités permanentes totales notifiées à l'entreprise au cours de l'année considérée",
                    ),
                ),
                (
                    "nombre_accidents_travail_mortels",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents mortels de travail",
                    ),
                ),
                (
                    "nombre_accidents_trajet_mortels",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents mortels de trajet",
                    ),
                ),
                (
                    "nombre_accidents_trajet_avec_arret_travail",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents de trajet ayant entraîné un arrêt de travail",
                    ),
                ),
                (
                    "nombre_accidents_salaries_temporaires_ou_prestataires",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents dont sont victimes les salariés temporaires ou de prestations de services dans l'entreprise",
                    ),
                ),
                (
                    "taux_cotisation_securite_sociale_accidents_travail",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Taux de la cotisation sécurité sociale d'accidents de travail",
                    ),
                ),
                (
                    "montant_cotisation_securite_sociale_accidents_travail",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Montant de la cotisation sécurité sociale d'accidents de travail",
                    ),
                ),
                (
                    "nombre_accidents_existence_risques_graves",
                    models.IntegerField(
                        blank=True,
                        help_text="Codes 32 à 40",
                        null=True,
                        verbose_name="Nombre d'accidents liés à l'existence de risques grave",
                    ),
                ),
                (
                    "nombre_accidents_chutes_dénivellation",
                    models.IntegerField(
                        blank=True,
                        help_text="Code 02",
                        null=True,
                        verbose_name="Nombre d'accidents liés à des chutes avec dénivellation",
                    ),
                ),
                (
                    "nombre_accidents_machines",
                    models.IntegerField(
                        blank=True,
                        help_text="À l'exception de ceux liés aux risques ci-dessus, codes 09 à 30",
                        null=True,
                        verbose_name="Nombre d'accidents occasionnés par des machines",
                    ),
                ),
                (
                    "nombre_accidents_circulation_manutention_stockage",
                    models.IntegerField(
                        blank=True,
                        help_text="Codes 01, 03, 04 et 06, 07, 08",
                        null=True,
                        verbose_name="Nombre d'accidents de circulation-manutention-stockage",
                    ),
                ),
                (
                    "nombre_accidents_objets_en_mouvement",
                    models.IntegerField(
                        blank=True,
                        help_text="Code 05",
                        null=True,
                        verbose_name="Nombre d'accidents occasionnés par des objets, masses, particules en mouvement accidentel",
                    ),
                ),
                (
                    "nombre_accidents_autres",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Autres cas"
                    ),
                ),
                (
                    "nombre_maladies_professionnelles",
                    models.IntegerField(
                        blank=True,
                        help_text="Nombre des maladies professionnelles déclarées à la sécurité sociale au cours de l'année",
                        null=True,
                        verbose_name="Nombre des maladies professionnelles",
                    ),
                ),
                (
                    "denomination_maladies_professionnelles",
                    models.TextField(
                        blank=True,
                        help_text="Dénomination des maladies professionnelles déclarées à la sécurité sociale au cours de l'année",
                        null=True,
                        verbose_name="Dénomination des maladies professionnelles",
                    ),
                ),
                (
                    "nombre_salaries_affections_pathologiques",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés atteints par des affections pathologiques à caractère professionnel",
                    ),
                ),
                (
                    "caracterisation_affections_pathologiques",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Caractérisation des affections pathologiques à caractère professionnel",
                    ),
                ),
                (
                    "nombre_declaration_procedes_travail_dangereux",
                    models.IntegerField(
                        blank=True,
                        help_text="En application de l'article L. 461-4 du code de la sécurité sociale",
                        null=True,
                        verbose_name="Nombre de déclarations par l'employeur de procédés de travail susceptibles de provoquer des maladies professionnelles",
                    ),
                ),
                (
                    "effectif_forme_securite",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Effectif formé à la sécurité dans l'année",
                    ),
                ),
                (
                    "montant_depenses_formation_securite",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Montant des dépenses de formation à la sécurité réalisées dans l'entreprise",
                    ),
                ),
                (
                    "taux_realisation_programme_securite",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Taux de réalisation du programme de sécurité présenté l'année précédente",
                    ),
                ),
                (
                    "nombre_plans_specifiques_securite",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de plans spécifiques de sécurité",
                    ),
                ),
                (
                    "horaire_hebdomadaire_moyen",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Il est possible de remplacer cet indicateur par la somme des heures travaillées durant l'année.",
                        null=True,
                        verbose_name="Horaire hebdomadaire moyen affiché des ouvriers et employés ou catégories assimilées",
                    ),
                ),
                (
                    "nombre_salaries_repos_compensateur_code_travail",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Au sens des dispositions du code du travail et du code rural et de la pêche maritime instituant un repos compensateur en matière d'heures supplémentaires.",
                        null=True,
                        verbose_name="Nombre de salariés ayant bénéficié d'un repos compensateur au titre du code du travail",
                    ),
                ),
                (
                    "nombre_salaries_repos_compensateur_regime_conventionne",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés ayant bénéficié d'un repos compensateur au titre d'un régime conventionne",
                    ),
                ),
                (
                    "nombre_salaries_horaires_individualises",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Au sens de l'article L. 3121-48.",
                        null=True,
                        verbose_name="Nombre de salariés bénéficiant d'un système d'horaires individualisés",
                    ),
                ),
                (
                    "nombre_salaries_temps_partiel_20_30_heures",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Au sens de l'article L. 3123-1.",
                        null=True,
                        verbose_name="Nombre de salariés employés à temps partiel entre 20 et 30 heures (33)",
                    ),
                ),
                (
                    "nombre_salaries_temps_partiel_autres",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés employés sous d'autres formes de temps partiel",
                    ),
                ),
                (
                    "nombre_salaries_2_jours_repos_hebdomadaire_consecutifs",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés ayant bénéficié tout au long de l'année considérée de deux jours de repos hebdomadaire consécutifs",
                    ),
                ),
                (
                    "nombre_moyen_jours_conges_annuels",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Repos compensateur non compris. Cet indicateur peut être calculé sur la dernière période de référence.",
                        null=True,
                        verbose_name="Nombre moyen de jours de congés annuels (non compris le repos compensateur)",
                    ),
                ),
                (
                    "nombre_jours_feries_payes",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Préciser, le cas échéant, les conditions restrictives.",
                        null=True,
                        verbose_name="Nombre de jours fériés payés",
                    ),
                ),
                (
                    "unite_absenteisme",
                    models.CharField(
                        choices=[
                            ("J", "Journées"),
                            ("1/2J", "1/2 journées"),
                            ("H", "Heures"),
                        ],
                        default="J",
                        max_length=10,
                    ),
                ),
                (
                    "nombre_unites_absence",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Ne sont pas comptés parmi les absences : les diverses sortes de congés, les conflits et le service national.",
                        null=True,
                        verbose_name="Nombre de journées d'absence",
                    ),
                ),
                (
                    "nombre_unites_theoriques_travaillees",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de journées théoriques travaillées",
                    ),
                ),
                (
                    "nombre_unites_absence_maladie",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de journées d'absence pour maladie",
                    ),
                ),
                (
                    "nombre_unites_absence_accidents",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de journées d'absence pour accidents du travail et de trajet ou maladies professionnelles",
                    ),
                ),
                (
                    "nombre_unites_absence_maternite",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de journées d'absence pour maternité",
                    ),
                ),
                (
                    "nombre_unites_absence_conges_autorises",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="(événements familiaux, congés spéciaux pour les femmes …)",
                        null=True,
                        verbose_name="Nombre de journées d'absence pour congés autorisés",
                    ),
                ),
                (
                    "nombre_unites_absence_autres",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de journées d'absence imputables à d'autres causes",
                    ),
                ),
                (
                    "nombre_personnes_horaires_alternant_ou_nuit",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de personnes occupant des emplois à horaires alternant ou de nuit",
                    ),
                ),
                (
                    "nombre_personnes_horaires_alternant_ou_nuit_50_ans",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de personnes occupant des emplois à horaires alternant ou de nuit de plus de cinquante ans",
                    ),
                ),
                (
                    "nombre_taches_repetitives",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["hommes", "femmes"],
                        help_text="Au sens de l'article D. 4163-2",
                        null=True,
                        verbose_name="Nombre de salarié(e)s affectés à des tâches répétitives",
                    ),
                ),
                (
                    "nombre_personnes_exposees_bruit",
                    models.IntegerField(
                        blank=True,
                        help_text="Les valeurs limites d'exposition et les valeurs d'exposition déclenchant une action de prévention qui sont fixées dans le tableau prévu à l'article R. 4431-2.",
                        null=True,
                        verbose_name="Nombre de personnes exposées de façon habituelle et régulière à plus de 80 à 85 db à leur poste de travail",
                    ),
                ),
                (
                    "nombre_salaries_exposes_temperatures",
                    models.IntegerField(
                        blank=True,
                        help_text="Au sens des articles R. 4223-13 à R. 4223-15",
                        null=True,
                        verbose_name="Nombre de salariés exposés au froid et à la chaleur",
                    ),
                ),
                (
                    "nombre_salaries_exposes_temperatures_extremes",
                    models.IntegerField(
                        blank=True,
                        help_text="Au sens de l'article D. 4163-2 : température inférieure ou égale à 5 degrés Celsius ou au moins égale à 30 degrés Celsius pour minimum 900 heures par an.",
                        null=True,
                        verbose_name="Nombre de salariés exposés aux températures extrêmes",
                    ),
                ),
                (
                    "nombre_salaries_exposes_intemperies",
                    models.IntegerField(
                        blank=True,
                        help_text="Au sens de l'article L. 5424-8 : Sont considérées comme intempéries, les conditions atmosphériques et les inondations lorsqu'elles rendent dangereux ou impossible l'accomplissement du travail eu égard soit à la santé ou à la sécurité des salariés, soit à la nature ou à la technique du travail à accomplir.",
                        null=True,
                        verbose_name="Nombre de salariés travaillant aux intempéries de façon habituelle et régulière",
                    ),
                ),
                (
                    "nombre_analyses_produits_toxiques",
                    models.IntegerField(
                        blank=True,
                        help_text="Renseignements tirés du rapport du directeur du service de prévention et de santé au travail interentreprises",
                        null=True,
                        verbose_name="Nombre de prélèvements, d'analyses de produits toxiques et mesures",
                    ),
                ),
                (
                    "experiences_transformation_organisation_travail",
                    models.TextField(
                        blank=True,
                        help_text="Pour l'explication de ces expériences d'amélioration du contenu du travail, donner le nombre de salariés concernés.",
                        null=True,
                        verbose_name="Expériences de transformation de l'organisation du travail en vue d'en améliorer le contenu",
                    ),
                ),
                (
                    "montant_depenses_amelioration_conditions_travail",
                    models.IntegerField(
                        blank=True,
                        help_text="Non compris l'évaluation des dépenses en matière de santé et de sécurité.",
                        null=True,
                        verbose_name="Montant des dépenses consacrées à l'amélioration des conditions de travail dans l'entreprise",
                    ),
                ),
                (
                    "taux_realisation_programme_amelioration_conditions_travail",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Taux de réalisation du programme d'amélioration des conditions de travail dans l'entreprise l'année précédente",
                    ),
                ),
                (
                    "nombre_visites_medicales",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["droit commun", "individuel renforcé"],
                        help_text="Selon le type de suivi",
                        null=True,
                        verbose_name="Nombre de visites d'information et de prévention des travailleurs",
                    ),
                ),
                (
                    "nombre_examens_medicaux",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["soumis à surveillance", "autres"],
                        null=True,
                        verbose_name="Nombre d'examens médicaux des travailleurs",
                    ),
                ),
                (
                    "pourcentage_temps_medecin_du_travail",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["analyse", "intervention"],
                        null=True,
                        verbose_name="Part du temps consacré par le médecin du travail en milieu de travail",
                    ),
                ),
                (
                    "nombre_salaries_inaptes",
                    models.IntegerField(
                        blank=True,
                        help_text="Nombre de salariés déclarés définitivement inaptes à leur emploi par le médecin du travail",
                        null=True,
                        verbose_name="Nombre de salariés inaptes",
                    ),
                ),
                (
                    "nombre_salaries_reclasses",
                    models.IntegerField(
                        blank=True,
                        help_text="Nombre de salariés reclassés dans l'entreprise à la suite d'une inaptitude",
                        null=True,
                        verbose_name="Nombre de salariés reclassés",
                    ),
                ),
                (
                    "evolution_amortissement",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Evolution des actifs nets d’amortissement et de dépréciations éventuelles (immobilisations)",
                    ),
                ),
                (
                    "montant_depenses_recherche_developpement",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Dépenses de recherche et développement",
                    ),
                ),
                (
                    "evolution_productivite",
                    models.TextField(
                        blank=True,
                        help_text="lorsque ces éléments sont mesurables dans l’entreprise",
                        null=True,
                        verbose_name="Evolution de la productivité et le taux d’utilisation des capacités de production",
                    ),
                ),
                (
                    "nombre_CDI_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'hommes en CDI",
                    ),
                ),
                (
                    "nombre_CDI_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de femmes en CDI",
                    ),
                ),
                (
                    "nombre_CDD_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'hommes en CDD",
                    ),
                ),
                (
                    "nombre_CDD_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de femmes en CDD",
                    ),
                ),
                (
                    "effectif_par_duree_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "temps complet",
                            "temps partiel entre 20 et 30 heures",
                            "autres temps partiels",
                        ],
                        null=True,
                        verbose_name="Répartition des effectifs hommes selon la durée du travail",
                    ),
                ),
                (
                    "effectif_par_duree_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "temps complet",
                            "temps partiel entre 20 et 30 heures",
                            "autres temps partiels",
                        ],
                        null=True,
                        verbose_name="Répartition des effectifs femmes selon la durée du travail",
                    ),
                ),
                (
                    "effectif_par_organisation_du_travail_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "travail posté",
                            "travail de nuit",
                            "horaires variables",
                            "travail atypique dont travail durant le week-end",
                        ],
                        null=True,
                        verbose_name="Répartition des effectifs hommes selon l'organisation du travail",
                    ),
                ),
                (
                    "effectif_par_organisation_du_travail_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "travail posté",
                            "travail de nuit",
                            "horaires variables",
                            "travail atypique dont travail durant le week-end",
                        ],
                        null=True,
                        verbose_name="Répartition des effectifs femmes selon l'organisation du travail",
                    ),
                ),
                (
                    "conges_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des congés des hommes",
                    ),
                ),
                (
                    "conges_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des congés des femmes",
                    ),
                ),
                (
                    "conges_par_type_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "compte épargne-temps",
                            "congé parental",
                            "congé sabbatique",
                        ],
                        null=True,
                        verbose_name="Répartition des congés des hommes selon le type de congés dont la durée est supérieure à six mois",
                    ),
                ),
                (
                    "conges_par_type_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "compte épargne-temps",
                            "congé parental",
                            "congé sabbatique",
                        ],
                        null=True,
                        verbose_name="Répartition des congés des femmes selon le type de congés dont la durée est supérieure à six mois",
                    ),
                ),
                (
                    "embauches_CDI_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des embauches hommes en CDI par catégorie professionnelle",
                    ),
                ),
                (
                    "embauches_CDI_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des embauches femmes en CDI par catégorie professionnelle",
                    ),
                ),
                (
                    "embauches_CDD_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des embauches hommes en CDD par catégorie professionnelle",
                    ),
                ),
                (
                    "embauches_CDD_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des embauches femmes en CDD par catégorie professionnelle",
                    ),
                ),
                (
                    "departs_retraite_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'hommes partis en retraite",
                    ),
                ),
                (
                    "departs_demission_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'hommes ayant démissionné",
                    ),
                ),
                (
                    "departs_fin_CDD_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'hommes en fin de CDD",
                    ),
                ),
                (
                    "departs_licenciement_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'hommes licenciés",
                    ),
                ),
                (
                    "departs_retraite_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de femmes partis en retraite",
                    ),
                ),
                (
                    "departs_demission_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de femmes ayant démissionné",
                    ),
                ),
                (
                    "departs_fin_CDD_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de femmes en fin de CDD",
                    ),
                ),
                (
                    "departs_licenciement_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de femmes licenciées",
                    ),
                ),
                (
                    "nombre_promotions_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de promotions homme",
                    ),
                ),
                (
                    "nombre_promotions_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de promotions femme",
                    ),
                ),
                (
                    "duree_moyenne_entre_deux_promotions_homme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Durée moyenne entre deux promotions pour les hommes",
                    ),
                ),
                (
                    "duree_moyenne_entre_deux_promotions_femme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Durée moyenne entre deux promotions pour les femmes",
                    ),
                ),
                (
                    "anciennete_moyenne_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Ancienneté moyenne des hommes par catégorie professionnelle",
                    ),
                ),
                (
                    "anciennete_moyenne_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Ancienneté moyenne des femmes par catégorie professionnelle",
                    ),
                ),
                (
                    "anciennete_moyenne_dans_categorie_profesionnelle_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Ancienneté moyenne des hommes dans chaque catégorie professionnelle",
                    ),
                ),
                (
                    "anciennete_moyenne_dans_categorie_profesionnelle_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Ancienneté moyenne des femmes dans chaque catégorie professionnelle",
                    ),
                ),
                (
                    "age_moyen_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Age moyen des hommes par catégorie professionnelle",
                    ),
                ),
                (
                    "age_moyen_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Age moyen des femmes par catégorie professionnelle",
                    ),
                ),
                (
                    "remuneration_moyenne_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Rémunération moyenne mensuelle des hommes par catégorie professionnelle",
                    ),
                ),
                (
                    "remuneration_moyenne_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Rémunération moyenne mensuelle des femmes par catégorie professionnelle",
                    ),
                ),
                (
                    "remuneration_moyenne_par_age_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "moins de 30 ans",
                            "30 à 39 ans",
                            "40 à 49 ans",
                            "50 ans et plus",
                        ],
                        null=True,
                        verbose_name="Rémunération moyenne mensuelle des hommes par tranche d'âge",
                    ),
                ),
                (
                    "remuneration_moyenne_par_age_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "moins de 30 ans",
                            "30 à 39 ans",
                            "40 à 49 ans",
                            "50 ans et plus",
                        ],
                        null=True,
                        verbose_name="Rémunération moyenne mensuelle des femmes par tranche d'âge",
                    ),
                ),
                (
                    "nombre_femmes_plus_hautes_remunerations",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de femmes dans les dix plus hautes rémunérations",
                    ),
                ),
                (
                    "nombre_moyen_heures_formation_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="hommes",
                        null=True,
                        verbose_name="Nombre moyen d'heures d'actions de formation par salarié et par an",
                    ),
                ),
                (
                    "nombre_moyen_heures_formation_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="femmes",
                        null=True,
                        verbose_name="Nombre moyen d'heures d'actions de formation par salariée et par an",
                    ),
                ),
                (
                    "action_adaptation_au_poste_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des hommes pour l'adaptation au poste",
                    ),
                ),
                (
                    "action_adaptation_au_poste_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des femmes pour l'adaptation au poste",
                    ),
                ),
                (
                    "action_maintien_emploi_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des hommes pour le maintien dans l'emploi",
                    ),
                ),
                (
                    "action_maintien_emploi_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des femmes pour le maintien dans l'emploi",
                    ),
                ),
                (
                    "action_developpement_competences_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des hommes pour le développement des compétences",
                    ),
                ),
                (
                    "action_developpement_competences_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Répartition des femmes pour le développement des compétences",
                    ),
                ),
                (
                    "exposition_risques_pro_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "manutentions manuelles de charges",
                            "postures pénibles",
                            "vibrations mécaniques",
                            "agents chimiques dangereux",
                            "milieu hyperbare",
                            "températures extrêmes",
                            "bruit",
                            "travail de nuit",
                            "travail en équipes successives alternantes",
                            "travail répétitif",
                        ],
                        null=True,
                        verbose_name="Répartition des postes de travail exposés à des risques professionnels occupés par des hommes",
                    ),
                ),
                (
                    "exposition_risques_pro_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "manutentions manuelles de charges",
                            "postures pénibles",
                            "vibrations mécaniques",
                            "agents chimiques dangereux",
                            "milieu hyperbare",
                            "températures extrêmes",
                            "bruit",
                            "travail de nuit",
                            "travail en équipes successives alternantes",
                            "travail répétitif",
                        ],
                        null=True,
                        verbose_name="Répartition des postes de travail exposés à des risques professionnels occupés par des femmes",
                    ),
                ),
                (
                    "accidents_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "accidents de travail",
                            "accidents de trajet",
                            "maladies professionnelles",
                        ],
                        null=True,
                        verbose_name="Accidents de travail, accidents de trajet et maladies professionnelles chez les hommes",
                    ),
                ),
                (
                    "accidents_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "accidents de travail",
                            "accidents de trajet",
                            "maladies professionnelles",
                        ],
                        null=True,
                        verbose_name="Accidents de travail, accidents de trajet et maladies professionnelles chez les femmes",
                    ),
                ),
                (
                    "nombre_accidents_travail_avec_arret_homme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents de travail ayant entraîné un arrêt de travail chez les hommes",
                    ),
                ),
                (
                    "nombre_accidents_travail_avec_arret_femme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents de travail ayant entraîné un arrêt de travail chez les femmes",
                    ),
                ),
                (
                    "nombre_accidents_trajet_avec_arret_homme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents de trajet ayant entraîné un arrêt de travail chez les hommes",
                    ),
                ),
                (
                    "nombre_accidents_trajet_avec_arret_femme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre d'accidents de trajet ayant entraîné un arrêt de travail chez les hommes",
                    ),
                ),
                (
                    "nombre_accidents_par_elements_materiels_homme",
                    models.IntegerField(
                        blank=True,
                        help_text="Faire référence aux codes de classification des éléments matériels des accidents (arrêté du 10 octobre 1974).",
                        null=True,
                        verbose_name="Répartition des accidents par éléments matériels chez les hommes",
                    ),
                ),
                (
                    "nombre_accidents_par_elements_materiels_femme",
                    models.IntegerField(
                        blank=True,
                        help_text="Faire référence aux codes de classification des éléments matériels des accidents (arrêté du 10 octobre 1974).",
                        null=True,
                        verbose_name="Répartition des accidents par éléments matériels chez les hommes",
                    ),
                ),
                (
                    "nombre_et_denominations_maladies_pro_homme",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre et dénomination des maladies professionnelles déclarées à la Sécurité sociale au cours de l'année concernant les hommes",
                    ),
                ),
                (
                    "nombre_et_denominations_maladies_pro_femme",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre et dénomination des maladies professionnelles déclarées à la Sécurité sociale au cours de l'année concernant les femmes",
                    ),
                ),
                (
                    "nombre_journees_absence_accident_homme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de journée d'absence pour accidents de travail, accidents de trajet ou maladies professionnelles chez les hommes",
                    ),
                ),
                (
                    "nombre_journees_absence_accident_femme",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de journée d'absence pour accidents de travail, accidents de trajet ou maladies professionnelles chez les femmes",
                    ),
                ),
                (
                    "maladies_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "nombre d'arrêts de travail",
                            "nombre de journées d'absence",
                        ],
                        null=True,
                        verbose_name="Maladies chez les hommes",
                    ),
                ),
                (
                    "maladies_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "nombre d'arrêts de travail",
                            "nombre de journées d'absence",
                        ],
                        null=True,
                        verbose_name="Maladies chez les femmes",
                    ),
                ),
                (
                    "maladies_avec_examen_de_reprise_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "nombre d'arrêts de travail",
                            "nombre de journées d'absence",
                        ],
                        help_text="en application du 3° de l'article R. 4624-31",
                        null=True,
                        verbose_name="Maladies ayant donné lieu à un examen de reprise du travail chez les hommes",
                    ),
                ),
                (
                    "maladies_avec_examen_de_reprise_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "nombre d'arrêts de travail",
                            "nombre de journées d'absence",
                        ],
                        help_text="en application du 3° de l'article R. 4624-31",
                        null=True,
                        verbose_name="Maladies ayant donné lieu à un examen de reprise du travail chez les femmes",
                    ),
                ),
                (
                    "complement_salaire_conge",
                    models.BooleanField(
                        default=False,
                        help_text="Existence d'un complément de salaire versé par l'employeur pour le congé de paternité, le congé de maternité, le congé d'adoption",
                        verbose_name="Complément de salaire versé par l'employeur",
                    ),
                ),
                (
                    "nombre_jours_conges_paternite_pris",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Nombre de jours de congés de paternité pris par le salarié par rapport au nombre de jours de congés théoriques",
                        null=True,
                        verbose_name="Jours de congés parternité",
                    ),
                ),
                (
                    "existence_orga_facilitant_vie_familiale_et_professionnelle",
                    models.BooleanField(
                        default=False,
                        verbose_name="Existence de formules d'organisation du travail facilitant l'articulation de la vie familiale et de la vie professionnelle",
                    ),
                ),
                (
                    "nombre_salaries_temps_partiel_choisi_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés homme ayant accédé au temps partiel choisi",
                    ),
                ),
                (
                    "nombre_salaries_temps_partiel_choisi_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariées femme ayant accédé au temps partiel choisi",
                    ),
                ),
                (
                    "nombre_salaries_temps_partiel_choisi_vers_temps_plein_homme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariés homme à temps partiel choisi ayant repris un travail à temps plein",
                    ),
                ),
                (
                    "nombre_salaries_temps_partiel_choisi_vers_temps_plein_femme",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Nombre de salariées femme à temps partiel choisi ayant repris un travail à temps plein",
                    ),
                ),
                (
                    "participation_accueil_petite_enfance",
                    models.BooleanField(
                        default=False,
                        verbose_name="Participation de l'entreprise et du comité social et économique aux modes d'accueil de la petite enfance",
                    ),
                ),
                (
                    "evolution_depenses_credit_impot_famille",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Evolution des dépenses éligibles au crédit d'impôt famille",
                    ),
                ),
                (
                    "mesures_prises_egalite",
                    models.TextField(
                        blank=True,
                        help_text="Bilan des actions de l'année écoulée et, le cas échéant, de l'année précédente. Evaluation du niveau de réalisation des objectifs sur la base des indicateurs retenus. Explications sur les actions prévues non réalisées",
                        null=True,
                        verbose_name="Mesures prises au cours de l'année écoulée en vue d'assurer l'égalité professionnelle",
                    ),
                ),
                (
                    "objectifs_progression",
                    models.TextField(
                        blank=True,
                        help_text="Définition qualitative et quantitative des mesures permettant de les atteindre conformément à l'article R. 2242-2. Evaluation de leur coût. Echéancier des mesures prévues",
                        null=True,
                        verbose_name="Objectifs de progression pour l'année à venir et indicateurs associés",
                    ),
                ),
                (
                    "capitaux_propres",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Capitaux propres de l'entreprise",
                    ),
                ),
                (
                    "emprunts_et_dettes_financieres",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Emprunts et dettes financières dont échéances et charges financières",
                    ),
                ),
                ("impots_et_taxes", models.IntegerField(blank=True, null=True)),
                (
                    "frais_personnel",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Frais de personnel, y compris cotisations sociales",
                    ),
                ),
                (
                    "evolution_salariale_par_categorie",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                    ),
                ),
                (
                    "evolution_salariale_par_sexe",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["homme", "femme"],
                        null=True,
                    ),
                ),
                (
                    "salaire_base_minimum_par_categorie",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Salaire de base minimum par catégorie",
                    ),
                ),
                (
                    "salaire_base_minimum_par_sexe",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["homme", "femme"],
                        null=True,
                        verbose_name="Salaire de base minimum par sexe",
                    ),
                ),
                (
                    "salaire_moyen_par_categorie",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Salaire moyen par catégorie",
                    ),
                ),
                (
                    "salaire_moyen_par_sexe",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["homme", "femme"],
                        null=True,
                    ),
                ),
                (
                    "salaire_median_par_categorie",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Salaire médian par catégorie",
                    ),
                ),
                (
                    "salaire_median_par_sexe",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["homme", "femme"],
                        null=True,
                        verbose_name="Salaire médian par sexe",
                    ),
                ),
                (
                    "rapport_masse_salariale_effectif_mensuel",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="Masse salariale annuelle totale, au sens de la déclaration annuelle de salaire",
                        null=True,
                        verbose_name="Rapport entre la masse salariale annuelle et l'effectif mensuel moyen",
                    ),
                ),
                (
                    "remuneration_moyenne_decembre",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="base 35 heures",
                        null=True,
                        verbose_name="Rémunération moyenne du mois de décembre (effectif permanent) hors primes à périodicité non mensuelle",
                    ),
                ),
                (
                    "remuneration_mensuelle_moyenne",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        null=True,
                        verbose_name="Rémunération mensuelle moyenne",
                    ),
                ),
                (
                    "part_primes_non_mensuelle",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="part des primes à périodicité non mensuelle dans la déclaration de salaire",
                        null=True,
                    ),
                ),
                (
                    "remunerations",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "- de 1.000",
                            "1.000-2.000",
                            "2.000-3.000",
                            "3.000-4.000",
                            "4.000-5.000",
                            "5.000 et plus",
                        ],
                        null=True,
                        verbose_name="Grille des rémunérations",
                    ),
                ),
                (
                    "rapport_moyenne_deciles",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="rapport entre la moyenne des rémunérations des 10 % des salariés touchant les rémunérations les plus élevées et celle correspondant au 10 % des salariés touchant les rémunérations les moins élevées",
                    ),
                ),
                (
                    "rapport_moyenne_cadres_ouvriers",
                    models.IntegerField(
                        blank=True,
                        help_text="Pour être prises en compte, les catégories concernées doivent comporter au minimum dix salariés.",
                        null=True,
                        verbose_name="Rapport entre la moyenne des rémunérations des cadres ou assimilés (y compris cadres supérieurs et dirigeants) et la moyenne des rémunérations des ouvriers non qualifiés ou assimilés.",
                    ),
                ),
                (
                    "montant_10_remunerations_les_plus_eleves",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Montant global des dix rémunérations les plus élevées.",
                    ),
                ),
                (
                    "pourcentage_salaries_primes_de_rendement",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["primes individuelles", "primes collectives"],
                        null=True,
                        verbose_name="Pourcentage des salariés dont le salaire dépend, en tout ou partie, du rendement",
                    ),
                ),
                (
                    "pourcentage_ouvriers_employes_payes_au_mois",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Pourcentage des ouvriers et employés payés au mois sur la base de l'horaire affiché",
                    ),
                ),
                (
                    "charge_salariale_globale",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "montant_global_hautes_remunerations",
                    models.IntegerField(
                        blank=True,
                        help_text="Montant global, certifié exact par les commissaires aux comptes, s'il en existe, des rémunérations versées aux personnes les mieux rémunérées, le nombre de ces personnes étant de dix ou de cinq selon que l'effectif du personnel excède ou non deux cents salariés ; uniquement pour les entreprises soumises aux dispositions de l'article L. 225-115 du code de commerce",
                        null=True,
                        verbose_name="Montant global des hautes rémunérations",
                    ),
                ),
                (
                    "montant_global_reserve_de_participation",
                    models.IntegerField(
                        blank=True,
                        help_text="Le montant global de la réserve de participation est le montant de la réserve dégagée-ou de la provision constituée-au titre de la participation sur les résultats de l'exercice considéré.",
                        null=True,
                        verbose_name="Montant global de la réserve de participation",
                    ),
                ),
                (
                    "montant_moyen_participation",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        help_text="La participation est envisagée ici au sens du titre II du livre III de la partie III.",
                        null=True,
                        verbose_name="Montant moyen de la participation et/ ou de l'intéressement par salarié bénéficiaire",
                    ),
                ),
                (
                    "part_capital_detenu_par_salaries",
                    models.IntegerField(
                        blank=True,
                        help_text="système de participation\xa0: participation aux résultats, intéressement, actionnariat …",
                        null=True,
                        verbose_name="Part du capital détenu par les salariés (dirigeants exclus) grâce à un système de participation",
                    ),
                ),
                (
                    "avantages_sociaux",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Avantages sociaux dans l'entreprise : pour chaque avantage préciser le niveau de garantie pour les catégories retenues pour les effectifs",
                    ),
                ),
                (
                    "remuneration_dirigeants_mandataires_sociaux",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Rémunération des dirigeants mandataires sociaux",
                    ),
                ),
                (
                    "composition_CSE_etablissement",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Composition des comités sociaux et économiques et/ ou d'établissement avec indication, s'il y a lieu, de l'appartenance syndicale",
                    ),
                ),
                (
                    "participation_elections",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Participation aux élections (par collège) par catégories de représentants du personnel",
                    ),
                ),
                (
                    "volume_credit_heures",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Volume global des crédits d'heures utilisés pendant l'année considérée",
                    ),
                ),
                (
                    "nombre_reunion_representants_personnel",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Nombre de réunions avec les représentants du personnel et les délégués syndicaux pendant l'année considérée",
                    ),
                ),
                (
                    "accords_conclus",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Dates et signatures et objet des accords conclus dans l'entreprise pendant l'année considérée",
                    ),
                ),
                (
                    "nombre_personnes_conge_education_ouvriere",
                    models.IntegerField(
                        blank=True,
                        help_text="Au sens des articles L. 2145-5 et suivants.",
                        null=True,
                        verbose_name="Nombre de personnes bénéficiaires d'un congé d'éducation ouvrière",
                    ),
                ),
                (
                    "nombre_heures_reunion_personnel",
                    models.IntegerField(
                        blank=True,
                        help_text="On entend par réunion du personnel, les réunions régulières de concertation, concernant les relations et conditions de travail organisées par l'entreprise.",
                        null=True,
                        verbose_name="Nombre d'heures consacrées aux différentes formes de réunion du personnel",
                    ),
                ),
                (
                    "elements_systeme_accueil",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Eléments caractéristiques du système d'accueil",
                    ),
                ),
                (
                    "elements_systeme_information",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Eléments caractéristiques du système d'information ascendante ou descendante et niveau d'application",
                    ),
                ),
                (
                    "elements_systeme_entretiens_individuels",
                    models.TextField(
                        blank=True,
                        help_text="Préciser leur périodicité.",
                        null=True,
                        verbose_name="Eléments caractéristiques du système d'entretiens individuels",
                    ),
                ),
                (
                    "differends_application_droit_du_travail",
                    models.TextField(
                        blank=True,
                        help_text="Avec indication de la nature du différend et, le cas échéant, de la solution qui y a mis fin.",
                        null=True,
                        verbose_name="Différends concernant l'application du droit du travail",
                    ),
                ),
                (
                    "contributions_financement_CSE_CSEE",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Contributions au financement, le cas échéant, du comité social et économique et des comités sociaux économiques d'établissement",
                    ),
                ),
                (
                    "contributions_autres_depenses",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=[
                            "logement",
                            "transport",
                            "restauration",
                            "loisirs",
                            "vacances",
                            "divers",
                        ],
                        help_text="Dépenses consolidées de l'entreprise.",
                        null=True,
                        verbose_name="Autres dépenses directement supportées par l'entreprise",
                    ),
                ),
                (
                    "cout_prestations_maladie_deces",
                    models.IntegerField(
                        blank=True,
                        help_text="Versements directs ou par l'intermédiaire d'assurances",
                        null=True,
                        verbose_name="Coût pour l'entreprise des prestations complémentaires (maladie, décès)",
                    ),
                ),
                (
                    "cout_prestations_vieillesse",
                    models.IntegerField(
                        blank=True,
                        help_text="Versements directs ou par l'intermédiaire d'assurances",
                        null=True,
                        verbose_name="Coût pour l'entreprise des prestations complémentaires (vieillesse)",
                    ),
                ),
                (
                    "equipements_pour_conditions_de_vie",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Equipements réalisés par l'entreprise et touchant aux conditions de vie des salariés à l'occasion de l'exécution du travail",
                    ),
                ),
                (
                    "remuneration_actionnaires",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Rémunération des actionnaires (revenus distribués)",
                    ),
                ),
                (
                    "remuneration_actionnariat_salarie",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Rémunération de l'actionnariat salarié (montant des actions détenues dans le cadre de l'épargne salariale, part dans le capital, dividendes reçus)",
                    ),
                ),
                (
                    "aides_financieres",
                    models.TextField(
                        blank=True,
                        help_text="Pour chacune de ces aides, l'employeur indique la nature de l'aide, son objet, son montant, les conditions de versement et d'emploi fixées, le cas échéant, par la personne publique qui l'attribue et son utilisation",
                        null=True,
                        verbose_name="Les aides ou avantages financiers consentis à l'entreprise par l'Union européenne, l'Etat, une collectivité territoriale, un de leurs établissements publics ou un organisme privé chargé d'une mission de service public, et leur utilisation",
                    ),
                ),
                (
                    "reductions_impots",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Réductions d'impôts"
                    ),
                ),
                (
                    "exonerations_cotisations_sociales",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Exonérations et réductions de cotisations sociales",
                    ),
                ),
                (
                    "credits_impots",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Crédits d'impôts"
                    ),
                ),
                (
                    "mecenat",
                    models.IntegerField(blank=True, null=True, verbose_name="Mécénat"),
                ),
                (
                    "chiffre_affaires",
                    models.IntegerField(
                        blank=True, null=True, verbose_name=" Le chiffre d'affaires"
                    ),
                ),
                (
                    "benefices_ou_pertes",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Les bénéfices ou pertes constatés",
                    ),
                ),
                (
                    "resultats_globaux",
                    reglementations.models.CategoryField(
                        base_field=django.forms.fields.IntegerField,
                        blank=True,
                        categories=["valeur", "volume"],
                        null=True,
                        verbose_name="Les résultats globaux de la production",
                    ),
                ),
                (
                    "affectation_benefices",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="L'affectation des bénéfices réalisés",
                    ),
                ),
                (
                    "partenariats_pour_produire",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Partenariats conclus pour produire des services ou des produits pour une autre entreprise",
                    ),
                ),
                (
                    "partenariats_pour_beneficier",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Partenariats conclus pour bénéficier des services ou des produits d'une autre entreprise",
                    ),
                ),
                (
                    "transferts_de_capitaux",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Transferts de capitaux tels qu'ils figurent dans les comptes individuels des sociétés du groupe lorsqu'ils présentent une importance significative",
                    ),
                ),
                (
                    "cessions_fusions_acquisitions",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Cessions, fusions, et acquisitions réalisées",
                    ),
                ),
                (
                    "informations_environnementales",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Informations environnementales présentées en application du 2° du A du II de l'article R. 225-105 du code de commerce",
                    ),
                ),
                (
                    "prevention_et_gestion_dechets",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Prévention et gestion de la production de déchets : évaluation de la quantité de déchets dangereux définis à l'article R. 541-8 du code de l'environnement et faisant l'objet d'une émission du bordereau mentionné à l'article R. 541-45 du même code",
                    ),
                ),
                (
                    "bilan_gaz_effet_de_serre",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Bilan des émissions de gaz à effet de serre prévu par l'article L. 229-25 du code de l'environnement ou bilan simplifié prévu par l'article 244 de la loi n° 2020-1721 du 29 décembre 2020 de finances pour 2021 pour les entreprises tenues d'établir ces différents bilans",
                    ),
                ),
                (
                    "prise_en_compte_questions_environnementales",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Organisation de l'entreprise pour prendre en compte les questions environnementales et, le cas échéant, les démarches d'évaluation ou de certification en matière d'environnement",
                    ),
                ),
                (
                    "quantite_de_dechets_dangereux",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="évaluation de la quantité de déchets dangereux définis à l'article R. 541-8 du code de l'environnement et faisant l'objet d'une émission du bordereau mentionné à l'article R. 541-45 du même code",
                    ),
                ),
                (
                    "consommation_eau",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="consommation d'eau"
                    ),
                ),
                (
                    "consommation_energie",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="consommation d'énergie"
                    ),
                ),
                (
                    "postes_emissions_directes_gaz_effet_de_serre",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Bilan des émissions de gaz à effet de serre prévu par l'article L. 229-25 du code de l'environnement ou bilan simplifié prévu par l'article 244 de la loi n° 2020-1721 du 29 décembre 2020 de finances pour 2021 pour les entreprises tenues d'établir ces différents bilans",
                    ),
                ),
                (
                    "entreprise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entreprises.entreprise",
                    ),
                ),
            ],
        ),
    ]
